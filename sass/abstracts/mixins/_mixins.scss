// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Column width with margin
@mixin column-width($numberColumns: 3) {
	width: map-get($columns, $numberColumns) -
		(($columns__margin * ($numberColumns - 1)) / $numberColumns);
}

// Underline effect
@mixin underline(
	$underlineType: double,
	$mainColor: var(--hctc-theme-color-2),
	$altColor: var(--hctc-theme-color-1)
) {
	position: relative;
	&::before,
	&::after {
		content: " ";
		position: absolute;
		width: 100%;
		height: 2px;
		transition: var(--hctc-transition-global);
	}
	&::before {
		transform: translateX(-5%);
		left: 0;
		bottom: -2px;
		background-color: $mainColor;
	}
	&:hover,
	&:focus {
		&::after,
		&::before {
			transform: translateX(0);
		}
	}
	@if ($underlineType != single) {
		&::after {
			transform: translateX(5%);
			left: 0;
			bottom: -7px;
			background-color: $altColor;
		}
	}
}

@mixin onHover {
	&:hover,
	&:focus,
	&:active {
		@content;
	}
}
@mixin onToggleActive {
	&.active,
	&.is-active {
		@content;
	}
}

@mixin addBg($url, $position: center) {
	position: relative;
	&::before {
		content: " ";
		background-size: cover;
		background-image: url($url);
		background-position: $position;
		position: absolute;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: var(--hctc-zindex-under);
	}
}

@mixin pull($where) {
	@if ($where == left) {
		margin-right: auto;
	}
	@if ($where == right) {
		margin-left: auto;
	}
	@if ($where == center) {
		margin-left: auto;
		margin-right: auto;
	}
}
