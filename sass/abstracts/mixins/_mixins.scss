// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Column width with margin
@mixin column-width($numberColumns: 3) {
	width: map-get($columns, $numberColumns) -
		(($columns__margin * ($numberColumns - 1)) / $numberColumns);
}

// Underline effect
@mixin underline(
	$underlineType: double,
	$mainColor: var(--hctc-theme-color-2),
	$altColor: var(--hctc-theme-color-1),
	$marginTop: -2px,
	$marginBottom: -7px,
	$vertical: bottom
) {
	position: relative;
	&::before,
	&::after {
		content: " ";
		position: absolute;
		width: 100%;
		height: 2px;
		transition: var(--hctc-transition-global);
	}
	&::before {
		transform: translateX(-0%);
		left: 0;
		#{$vertical}: $marginTop;
		background-color: $mainColor;
	}
	&:hover,
	&:focus {
		&::after,
		&::before {
			transform: translateX(0);
		}
	}
	@if ($underlineType != single) {
		&::after {
			transform: translateX(-5%);
			left: 0;
			#{$vertical}: $marginBottom;
			background-color: $altColor;
		}
	}
}

@mixin addDecor($url, $size: contain, $repeat: no-repeat, $scale: 1) {
	position: relative;
	&::after {
		width: 100%;
		height: 100%;
		content: " ";
		left: -50%;
		top: -50%;
		transform: translate(50%, 50%) scale($scale);
		content: " ";
		position: absolute;
		z-index: -2;
		@if ($url) {
			background-image: url($url);
		}
		background-position: center;
		background-size: $size;
		background-repeat: $repeat;
	}
}

@mixin addTransparentRectangle(
	$opacity: 0.5,
	$height: 200px,
	$width: 200px,
	$left: 0,
	$top: 0,
	$bg-color: color(RED)
) {
	position: relative;
	&::before {
		width: $width;
		height: $height;
		content: " ";
		left: $left;
		top: $top;
		background-color: transparentize($bg-color, $opacity);
		transform: translate(50%, 50%);
		content: " ";
		position: absolute;
		z-index: -1;
	}
}

@mixin onHover {
	&:hover,
	&:focus,
	&:active {
		@content;
	}
}
@mixin onToggleActive {
	&.active,
	&.is-active {
		@content;
	}
}

@mixin addBg($url, $position: center) {
	position: relative;
	&::before {
		content: " ";
		background-size: cover;
		background-image: url($url);
		background-position: $position;
		position: absolute;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: var(--hctc-zindex-under);
	}
}

@mixin pull($where) {
	@if ($where == left) {
		margin-right: auto;
	}
	@if ($where == right) {
		margin-left: auto;
	}
	@if ($where == center) {
		margin-left: auto;
		margin-right: auto;
	}
}

@mixin borderRadius(
	$topleft: 0,
	$topright: 0,
	$bottomright: 0,
	$bottomleft: 0
) {
	border-top-left-radius: $topleft;
	border-top-right-radius: $topright;
	border-bottom-right-radius: $bottomright;
	border-bottom-left-radius: $bottomleft;
}

@mixin bannerBorderRadius {
	@include borderRadius(
		0,
		var(--hctc-border-radius-lg),
		0,
		var(--hctc-border-radius-lg)
	);
}

@mixin responsiveFontSize($desktop, $mobile) {
	@if ($mobile) {
		font-size: var(--hctc-font-#{$mobile});
		@include min-sm {
			font-size: var(--hctc-font-#{$desktop});
		}
	} @else {
		font-size: var(--hctc-font-#{$desktop});
	}
}

@mixin addSquareDecor(
	$color: var(--hctc-theme-color-1),
	$alpha: 1,
	$left: 0,
	$top: 0,
	$minHeight: 50px,
	$width: 50%
) {
	position: relative;
	@include onHover {
		&::after {
			width: calc($width + 1%);
		}
	}
	&::after {
		transition: var(--hctc-transition-global);
		content: " ";
		position: absolute;
		background-color: transparentize($color, $alpha);
		left: $left;
		top: $top;
		height: 100%;
		width: $width;
		z-index: var(--hctc-zindex-under);
		min-height: $minHeight;
	}
}

@mixin underline-full-width(
	$pull: right,
	$vertical: top,
	$underlineType: double,
	$mainColor: var(--hctc-theme-color-2),
	$altColor: var(--hctc-theme-color-1),
	$marginTop: -2px,
	$marginBottom: -10px
) {
	overflow-x: clip;
	position: absolute;
	width: 100%;
	&::before,
	&::after {
		// overflow: hidden;
		content: " ";
		position: absolute;
		width: 100%;
		height: 2px;
		transition: var(--hctc-transition-global);
		max-width: calc(100vw - $max-width-side);
	}
	&::before {
		@if ($pull == left) {
			max-width: 90%;
		} @else {
			max-width: 90%;
		}
		#{$pull}: 0;
		#{$vertical}: $marginTop;
		background-color: $mainColor;
	}

	@if ($underlineType != single) {
		&::after {
			transform: translateX(0%);
			#{$pull}: 0;
			#{$vertical}: $marginBottom;
			background-color: $altColor;
		}
	}
}
