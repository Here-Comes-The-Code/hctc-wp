@mixin flexLayout(
  $horizontal: center,
  $vertical: center,
  $isColumn: false,
  $wrap: false
) {
  display: flex;
  justify-content: $horizontal;
  align-items: $vertical;
  @if ($isColumn) {
    flex-direction: column;
  }
  @if ($wrap) {
    flex-wrap: wrap;
  }
}

@mixin addPadding($horizontal, $vertical, $bottom, $left) {
  @if ($horizontal and $vertical and $bottom and $left) {
    padding-top: $horizontal;
    padding-right: $vertical;
    padding-bottom: $bottom;
    padding-left: $left;
  } @else if ($horizontal and $vertical) {
    padding-top: $vertical;
    padding-bottom: $vertical;
    padding-left: $horizontal;
    padding-right: $horizontal;
  } @else {
    padding-top: $horizontal;
    padding-bottom: $horizontal;
    padding-left: $horizontal;
    padding-right: $horizontal;
  }
}

@mixin addMargin($horizontal, $vertical, $bottom, $left) {
  @if ($horizontal and $vertical and $bottom and $left) {
    margin-top: $horizontal;
    margin-right: $vertical;
    margin-bottom: $bottom;
    margin-left: $left;
  } @else if ($horizontal and $vertical) {
    margin-top: $vertical;
    margin-bottom: $vertical;
    margin-left: $horizontal;
    margin-right: $horizontal;
  } @else {
    margin-top: $horizontal;
    margin-bottom: $horizontal;
    margin-left: $horizontal;
    margin-right: $horizontal;
  }
}

@mixin mobileNav(
  $transformSide: horizontal,
  $bgColor: var(--hctc-header-nav-mobile-bg-color)
) {
  width: 100vw;
  height: 100vh;
  position: fixed;
  left: 0;
  top: 0;
  background-color: $bgColor;
  transition: var(--hctc-transition-global);
  @if ($transformSide != horizontal) {
    transform: translateY(-100%);
    &.is-active {
      transform: translateY(0);
    }
  } @else if($transformSide == horizontal) {
    transform: translateX(-100%);
    &.is-active {
      transform: translateX(0);
    }
  }
}
