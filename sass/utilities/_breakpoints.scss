@use "sass:map";

// max-width-container
@mixin padding-max-width {
  padding-left: calc(
    (100vw - map.get($hctc-theme-variables, "layout-desktop-width")) / 2
  );
  padding-right: calc(
    (100vw - map.get($hctc-theme-variables, "layout-desktop-width")) / 2
  );
}

@mixin restrict-desktop-width {
  @include padding-max-width;
}

$breakpoints: (
  "xs": 320px,
  "sm": 480px,
  "md": 768px,
  "lg": 1024px,
  "xl": 1140px,
  "xxl": 1200px,
);

// Responsiveness mixins
@mixin min-xs {
  @media only screen and (min-width: 320px) {
    @content;
  }
}

@mixin min-sm {
  @media only screen and (min-width: 480px) {
    @content;
  }
}

@mixin min-md {
  @media only screen and (min-width: 768px) {
    @content;
  }
}

@mixin min-lg {
  @media only screen and (min-width: 1024px) {
    @content;
  }
}

@mixin min-xl {
  @media only screen and (min-width: 1140px) {
    @content;
  }
}

@mixin min-xxl {
  @media only screen and (min-width: 1280px) {
    @content;
  }
}

@mixin min-lim {
  @media only screen and (min-width: 1400px) {
    @content;
  }
}
/* max */

@mixin max-xs {
  @media only screen and (max-width: 320px) {
    @content;
  }
}

@mixin max-sm {
  @media only screen and (max-width: 480px) {
    @content;
  }
}

@mixin max-md {
  @media only screen and (max-width: 768px) {
    @content;
  }
}

@mixin max-lg {
  @media only screen and (max-width: 1024px) {
    @content;
  }
}

@mixin max-xl {
  @media only screen and (max-width: 1140px) {
    @content;
  }
}

@mixin max-xl {
  @media only screen and (max-width: 1280px) {
    @content;
  }
}
@mixin max-lim {
  @media only screen and (max-width: 1400px) {
    @content;
  }
}
